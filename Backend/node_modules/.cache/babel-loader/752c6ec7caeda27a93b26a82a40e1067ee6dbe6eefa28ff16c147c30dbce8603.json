{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HITEN ANAND\\\\Programming\\\\WebDevelopment\\\\NextJsProjects\\\\Voting\\\\poll-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [choice, setChoice] = useState('');\n  const [date, setDate] = useState('');\n  const [pollData, setPollData] = useState([]);\n  useEffect(() => {\n    const fetchPollData = async () => {\n      const response = await fetch('http://localhost:3001/get-poll-data');\n      const data = await response.json();\n      setPollData(data);\n    };\n    fetchPollData();\n  }, []);\n  const handleSubmit = async () => {\n    const response = await fetch('http://localhost:3001/submit-poll', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        choice,\n        date\n      })\n    });\n    if (response.ok) {\n      console.log('Poll submitted successfully');\n      setName('');\n      setChoice('');\n      setDate('');\n      // Refresh poll data after submission\n      const updatedData = await (await fetch('http://localhost:3001/get-poll-data')).json();\n      setPollData(updatedData);\n    } else {\n      console.error('Error submitting poll');\n    }\n  };\n  const dates = pollData.map(entry => entry.date);\n  const yesVotes = pollData.filter(entry => entry.choice === 'yes').length;\n  const noVotes = pollData.filter(entry => entry.choice === 'no').length;\n  const lineChartData = {\n    labels: dates,\n    datasets: [{\n      label: 'Yes',\n      data: pollData.filter(entry => entry.choice === 'yes').map(() => 1),\n      borderColor: 'green'\n    }, {\n      label: 'No',\n      data: pollData.filter(entry => entry.choice === 'no').map(() => 1),\n      borderColor: 'red'\n    }]\n  };\n  const barChartData = {\n    labels: ['Yes', 'No'],\n    datasets: [{\n      label: 'Overall Votes',\n      data: [yesVotes, noVotes],\n      backgroundColor: ['green', 'red']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Poll Station\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Choice\",\n        value: choice,\n        onChange: e => setChoice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date\",\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit Poll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Trend Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: lineChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x5rs/ADBvFA+TQgx5o7vZk2M9/Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TextField","Button","Typography","Line","Bar","jsxDEV","_jsxDEV","App","_s","name","setName","choice","setChoice","date","setDate","pollData","setPollData","fetchPollData","response","fetch","data","json","handleSubmit","method","headers","body","JSON","stringify","ok","console","log","updatedData","error","dates","map","entry","yesVotes","filter","length","noVotes","lineChartData","labels","datasets","label","borderColor","barChartData","backgroundColor","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HITEN ANAND/Programming/WebDevelopment/NextJsProjects/Voting/poll-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst App = () => {\n  const [name, setName] = useState('');\n  const [choice, setChoice] = useState('');\n  const [date, setDate] = useState('');\n  const [pollData, setPollData] = useState([]);\n\n  useEffect(() => {\n    const fetchPollData = async () => {\n      const response = await fetch('http://localhost:3001/get-poll-data');\n      const data = await response.json();\n      setPollData(data);\n    };\n\n    fetchPollData();\n  }, []);\n\n  const handleSubmit = async () => {\n    const response = await fetch('http://localhost:3001/submit-poll', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, choice, date }),\n    });\n\n    if (response.ok) {\n      console.log('Poll submitted successfully');\n      setName('');\n      setChoice('');\n      setDate('');\n      // Refresh poll data after submission\n      const updatedData = await (await fetch('http://localhost:3001/get-poll-data')).json();\n      setPollData(updatedData);\n    } else {\n      console.error('Error submitting poll');\n    }\n  };\n\n  const dates = pollData.map((entry) => entry.date);\n  const yesVotes = pollData.filter((entry) => entry.choice === 'yes').length;\n  const noVotes = pollData.filter((entry) => entry.choice === 'no').length;\n\n  const lineChartData = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Yes',\n        data: pollData.filter((entry) => entry.choice === 'yes').map(() => 1),\n        borderColor: 'green',\n      },\n      {\n        label: 'No',\n        data: pollData.filter((entry) => entry.choice === 'no').map(() => 1),\n        borderColor: 'red',\n      },\n    ],\n  };\n\n  const barChartData = {\n    labels: ['Yes', 'No'],\n    datasets: [\n      {\n        label: 'Overall Votes',\n        data: [yesVotes, noVotes],\n        backgroundColor: ['green', 'red'],\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Poll Station</Typography>\n      <form>\n        <TextField\n          label=\"Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          label=\"Choice\"\n          value={choice}\n          onChange={(e) => setChoice(e.target.value)}\n        />\n        <TextField\n          label=\"Date\"\n          type=\"date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Submit Poll\n        </Button>\n      </form>\n\n      <Typography variant=\"h4\">Trend Analysis</Typography>\n      <Line data={lineChartData} />\n      <Bar data={barChartData} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}